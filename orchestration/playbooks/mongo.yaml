# Install mongodb 
---
- name: Install MongoDB
  become: true
  hosts: all
  gather_facts: no

  tasks:
    - name: Excuting Common Role
      include_role:
        name: commons
        tasks_from: commons
      vars:
        extravars: "{{extravars}}"

    - name: Wait for connection to come up, if needed
      wait_for_connection:
        timeout: 300
        sleep: 5

    - name: Add Mongo repo keys
      apt_key:
        id: 9DA31620334BD75D9DCB49F368818C72E52529D4
        keyserver: keyserver.ubuntu.com

    - name: Add Mongo repo to sources
      apt_repository:
        repo: deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse
        state: present
      register: apt_status
      until: apt_status is success
      delay: 10
      retries: 60

    - name: Get any updates and refresh cache
      apt:
        update_cache: yes
        upgrade: dist
        autoremove: yes

    - name: Install Mongo itself
      apt:
        pkg: mongodb-org
        state: present

    - name: Enable Mongo daemon/service
      service:
        name: mongod
        state: started
        enabled: yes

    - name: Allow SSH connections
      ufw:
        rule: allow
        name: OpenSSH

    - name: Allow intranet access
      ufw:
        rule: allow
        proto: tcp
        src: 192.168.0.0/16

    - name: Enable firewall
      ufw:
        state: enabled

    - name: Allow external connections to Mongo
      replace:
        path: /etc/mongod.conf
        regexp: '^  bindIp: 127\.0\.0\.1$'
        replace: '  bindIp: 0.0.0.0'
      register: mongo_configuration

    - name: Restart mongo service to reload configuration
      when: mongo_configuration.changed
      service:
        name: mongod
        state: restarted

    - name: Download the mongo template to prepare for instantiation
      when: mongo_configuration.changed
      become_user: cc
      become_method: su
      unarchive:
        src: http://www.public.asu.edu/~hwbehren/files/mongo_template.zip
        dest: /home/cc/
        remote_src: yes

    - name: Restore the template to Mongo
      when: mongo_configuration.changed
      shell: "mongorestore --db {{ item }} --drop /home/cc/mongo_template/{{ item }}"
      loop: ["ds_config", "ds_results", "ds_state", "Users"]

    - name: Delete the template, if it exists
      file:
        path: /home/cc/mongo_template/
        state: absent

    # remaining mongo tweaks will happen in Python, for simplicity
